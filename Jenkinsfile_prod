pipeline {
    agent any
    environment{
		registryName = "CoitFrontend"
		registryUrl = "coitfrontend.azurecr.io/"
		registryCredential = "ACR"
		COMPOSE_PROJECT_NAME = "mycustomsolution"


		mavenHome = tool 'mymaven'
		dockerHome = tool 'mydocker'
		gitHome = tool 'myGit'
		PATH = "$dockerHome/bin:$mavenHome/bin:$gitHome/bin:$PATH"
	}
    stages {
        stage('Checkout'){
			steps{
				sh 'mvn --version'
                sh 'git --version'
				sh 'docker --version'
				echo "Build"
				echo "PATH - $PATH"
				echo "BUILD_NUMBER - $env.BUILD_NUMBER"
				echo "BUILD_ID - $env.BUILD_ID"
				echo "BUILD_TAG - $env.BUILD_TAG"
				echo "JOB_NAME - $env.JOB_NAME"
				//checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [],
				// gitTool: 'Default', userRemoteConfigs: [[url: 'https://github.com/kollidatta/Coit-Jenkins']]]) 
			}
        }	
        stage('Build Images') {
            parallel {
                stage('Build Frontend') {
                    steps{
                        dir('./coit-frontend'){
                            script{
                                def FRONTENDDOCKER = 'Dockerfile-multistage'
                                DockerFrontend = docker.build("kollidatta/frontend:${env.BUILD_TAG}","-f ${FRONTENDDOCKER} .")
				                //sh('docker build -t kollidatta/coitfrontend:v1 -f Dockerfile-multistage .')
                                }
                            }
                        }
                    }
                stage('Build backend2'){
                    steps{
                        dir('./coit-backend2'){
                            echo "path- $PATH"
                            script{
                                DockerBackend2 = docker.build("kollidatta/backend2:${env.BUILD_TAG}")
                            //sh('docker build -t kollidatta/coitbackend2:v1 -f ./coit-backend2/Dockerfile .')
                                }
                            }
                        }
                    }
                }
            }
        }
    }
